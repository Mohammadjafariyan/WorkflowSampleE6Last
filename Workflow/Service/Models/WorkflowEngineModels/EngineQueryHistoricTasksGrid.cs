// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using WorkflowSample.Service.Models.WorkflowEngineModels;
//
//    var engineQueryHistoricTasksGrid = EngineQueryHistoricTasksGrid.FromJson(jsonString);

namespace WorkflowSample.Service.Models.WorkflowEngineModels
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class EngineQueryHistoricTasksGrid:BaseWorkflowResponse
    {
        [JsonProperty("data")]
        public EngineQueryHistoricTask[] Data { get; set; }

        [JsonProperty("total")]
        public long Total { get; set; }

        [JsonProperty("start")]
        public long Start { get; set; }

        [JsonProperty("sort")]
        public string Sort { get; set; }

        [JsonProperty("order")]
        public string Order { get; set; }

        [JsonProperty("size")]
        public long Size { get; set; }
    }

    public partial class EngineQueryHistoricTask
    {
    [JsonProperty("id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("processDefinitionId")]
        public string ProcessDefinitionId { get; set; }

        [JsonProperty("processDefinitionUrl")]
        public Uri ProcessDefinitionUrl { get; set; }

        [JsonProperty("processInstanceId")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ProcessInstanceId { get; set; }

        [JsonProperty("processInstanceUrl")]
        public Uri ProcessInstanceUrl { get; set; }

        [JsonProperty("executionId")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ExecutionId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("description")]
        public object Description { get; set; }

        [JsonProperty("deleteReason")]
        public string DeleteReason { get; set; }

        [JsonProperty("owner")]
        public object Owner { get; set; }

        [JsonProperty("assignee")]
        public string Assignee { get; set; }

        [JsonProperty("startTime")]
        public DateTimeOffset StartTime { get; set; }

        [JsonProperty("endTime")]
        public DateTimeOffset? EndTime { get; set; }

        [JsonProperty("durationInMillis")]
        public long? DurationInMillis { get; set; }

        [JsonProperty("workTimeInMillis")]
        public object WorkTimeInMillis { get; set; }

        [JsonProperty("claimTime")]
        public object ClaimTime { get; set; }

        [JsonProperty("taskDefinitionKey")]
        public string TaskDefinitionKey { get; set; }

        [JsonProperty("formKey")]
        public string FormKey { get; set; }

        [JsonProperty("priority")]
        public long Priority { get; set; }

        [JsonProperty("dueDate")]
        public object DueDate { get; set; }

        [JsonProperty("parentTaskId")]
        public object ParentTaskId { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("variables")]
        public object[] Variables { get; set; }

        [JsonProperty("tenantId")]
        public string TenantId { get; set; }

        [JsonProperty("category")]
        public object Category { get; set; }
    
    }

}
